{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","onFocus","getGifs","category","a","search","encodeURI","url","fetch","resp","json","data","gifs","map","img","id","title","image","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","titulo","categories","i","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,gCADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAiB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAOlB,4CACI,2BACIO,KAAK,OACLC,MAAOT,EACPU,SArBa,SAACP,GAEtBF,EAAcE,EAAEQ,OAAOF,QAoBfG,QAlBQ,WAAOX,EAAc,S,uBCThCY,EAAO,uCAAG,WAAMC,GAAN,yBAAAC,EAAA,4DAGL,mCACE,uCACVC,EALa,aAKEC,UAAUH,GALZ,sBAMbI,EAFU,uCAEKF,EAHP,mCAHK,SAQAG,MAAMD,GARN,cAQbE,EARa,gBASEA,EAAKC,OATP,uBASZC,EATY,EASZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,MAAK,UAAGH,EAAII,cAAP,aAAG,EAAYC,iBAAiBZ,QAf1B,kBAmBZK,GAnBY,4CAAH,sDCEPQ,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAEhC,OACI,yBAAKI,UAAU,0CACX,yBAAKC,IAAKL,EAAOM,IAAKP,IACtB,2BAAIA,KCHHQ,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZf,mBAAS,CAC3BuB,KAAM,GACNc,SAAS,IAHqB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAVAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAM,SAAAC,GACpBH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAIlB,CAACtB,IAEGuB,EDdwBK,CAAa5B,GAAhCe,EAFuB,EAE5BP,KAAac,EAFe,EAEfA,QAGpB,OACI,oCACI,4BAAKtB,GACJsB,GAAW,uBAAGJ,UAAU,oCAAb,2BACZ,yBAAKA,UAAU,aAEXH,EAAOL,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eAAaA,IAAKA,GAASA,EAA3B,CAAgCkB,IAAKlB,EAAIC,YETvDkB,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EAEG9C,mBAAS,CAAC,aAFb,mBAE1B+C,EAF0B,KAEdhD,EAFc,KAIjC,OACI,oCACI,4BAAM+C,GACN,kBAAC,EAAD,CAAa/C,cAAeA,IAC5B,6BAEA,4BAEQgD,EAAWtB,KAAK,SAACV,EAASiC,GAAV,OACZ,kBAAC,EAAD,CACIJ,IAAK7B,EAASiC,EACdjC,SAAUA,UAYtC8B,EAAaI,aAAc,CACvBH,OAAS,cAGED,Q,MChCfK,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.ee0a9b53.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('Ingresar una nueva categoria');\n    const handelInputChange =(e) =>{\n        //console.log(e.target.value);\n        setInputValue(e.target.value);\n    }\n    const handleClear = () =>{ setInputValue('')}\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2 ){\n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue('');\n        }\n\n        //console.log('hecho');\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n        <h3>Add Category</h3>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handelInputChange}\n                onFocus={handleClear}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}","export const getGifs = async(category) => {\n\n        \n    const apiKey ='lHmLxQmrth3lKTRSOb7Tog1lFfA4g8x3';\n    const endPoint ='https://api.giphy.com/v1/gifs/search';\n    const search = `?q=${encodeURI(category)}&limit=10&api_key=`;\n    const url = endPoint+search+apiKey;\n\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img =>{\n        return{\n            id: img.id,\n            title: img.title,\n            image : img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({title, image}) => {\n    //console.log(id, title, image)\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={image} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n    //console.log(loading);\n\n    return (\n        <>\n            <h4>{category}</h4>\n            {loading && <p className=\"animate__animated animate__flash\">Cargando im√°genes...</p> }\n            <div className=\"card-grid\">\n                {\n                images.map( (img) => (\n                    <GifGridItem img={img} {...img} key={img.id} />\n                    ))\n                }    \n                \n            </div>\n        </>\n    )\n}","import {useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n            data: [],\n            loading: true,\n    });\n\n\n    useEffect(()=>{ \n        getGifs(category).then( imgs =>{\n            setState({\n                data: imgs,\n                loading: false\n            })\n        })\n        //getGifs(category).then(imgs => setImages (imgs))\n    }, [category]);\n\n    return state;\n}\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n//import React, { Fragment } from 'react';\n\nconst GifExpertApp = ({ titulo }) => {\n\n    const [categories, setCategories] = useState(['Robotech']);\n\n    return (\n        <>\n            <h2>{ titulo }</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n            {/* <button onClick={ handelAdd }>Agregar</button> */}\n            <ol>\n                {\n                    categories.map( (category,i) => (\n                        <GifGrid\n                            key={category+i}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n        );\n}\n\nGifExpertApp.propTypes = {\n    titulo: PropTypes.string.isRequired,\n}\nGifExpertApp.defaultProps ={\n    titulo : 'Gif Expert',\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}